ResourceFile.Application=Common
ResourceFile.Version=1
ResourceFile.Language=eng

###############################################################################################
#
# WATCHDOG
#
###############################################################################################

#
# WATCHDOG Configuration
#

# WATCHDOG group
Configuration.Common.Server.Property.Watchdog=
|Manual.Header=Manual
|Manual.1=WATCHDOG properties (Server)

# WATCHDOG: Active
Configuration.Common.Server.Property.Watchdog.Active=
|CreatedBy=Frank Wuensche
|CreatedDate=01.01.2013
|CreatedVersion=1
|Manual.Header=Manual
|Manual.1=Define if the WATCHDOG function is switched 'on' or 'off'.
|Manual.2=Please set this value to 'true' if you want to activate the WATCHDOG function, or to 'false' if you want to deactivate it.

# WATCHDOG: DistributionList
Configuration.Common.Server.Property.Watchdog.DistributionList=
|CreatedBy=Frank Wuensche
|CreatedDate=01.01.2013
|CreatedVersion=1
|Manual.Header=Manual
|Manual.1=Define the mailing list of all WATCHDOG recipients.
|Manual.2=Please separate the items with comma, e. g. 'c.miller@company.com, admin@provider.net, a.webber@customer.com'.
|Manual.3=If you want to confine a recipient to specific resources you can list the respective resource identifiers after the recipient address separated by colon ':', e. g. 'c.miller@company.com : Notification.Common.Server.Event.Running.ServerStarted : Notification.Common.Server.Event.Running.ServerStopped'.
|Usage.Header=Using a parameter file
|Usage.1=Instead of using a comma separated list you may store all parameters in a parameter file, without any limitation regarding the format.
|Usage.2=At the end of the day the lines of the parameter file were joined to a single string. You might comment some lines with the help of the hash mark "#". Those lines are ignored.
|Usage.3=You can name the configuration file practically, e. g. 'something.conf', and refer to it with the name in curly bracket, starting with a dollar symbol, e. g. '${something.conf}'.

# WATCHDOG: MaximumNuOfItemsInCommandQueue
Configuration.Common.Server.Property.Watchdog.MaximumNuOfItemsInCommandQueue=
|CreatedBy=Frank Wuensche
|CreatedDate=09.01.2013
|CreatedVersion=1
|Manual.Header=Manual
|Manual.1=Define the maximum number of items in the command queue of WATCHDOG commands.
|Manual.2=Each error or event that is to be notified via the WATCHDOG is registered in a queue first. The WATCHDOG reads and processes this queue independently from the input. After processing a command the item is deleted by the WATCHDOG.
|Manual.3=If the WATCHDOG cannot distribute the messages, or it doesn't work effectively, or there are too many messages to notify in time - the queue may overflow. To avoid an overflow the maximum number is to be set. In case of exceeding this number the input of new WATCHDOG commands is refused until the queue is decreased. The minimum value accepted is 100. The maximum value can be set to 500 seconds. The default value is 100.

# WATCHDOG: SecondsToWaitBetweenWatchdogProcessing
Configuration.Common.Server.Property.Watchdog.SecondsToWaitBetweenWatchdogProcessing=
|CreatedBy=Frank Wuensche
|CreatedDate=16.01.2013
|CreatedVersion=1
|Manual.Header=Manual
|Manual.1=Define the number of seconds to wait after the current queue of WATCHDOG commands was processed.
|Manual.2=This parameter helps to avoid SPAM behavior if there are a lot of WATCHDOG events to process. The minimum value accepted is 1 second. The maximum value can be set to 60 seconds. The default value is 5 seconds.
|Manual.3=After starting the WATCHDOG server it waits this time duration before the first processing is executed.

#
# WATCHDOG Event
#

# WATCHDOG group
Notification.Common.Server.Event.Watchdog=
|Manual.Header=Manual
|Manual.1=WATCHDOG event notifications (Server)

# WATCHDOG: WatchdogServerStarted
Notification.Common.Server.Event.Watchdog.WatchdogServerStarted=
|CreatedBy=Frank Wuensche
|CreatedDate=16.01.2013
|CreatedVersion=1
|Manual.Header=Manual
|Manual.1=This event is fired after the WATCHDOG server was started successfully.
|Manual.2=It's an information only, and fired during starting process of an application server.
|Manual.3=Please notice that there can run several application servers on one and the same physical machine. Each application server starts a WATCHDOG server internally. You can see the identification of the server as additional text.

# WATCHDOG: WatchdogServerInterrupted
Notification.Common.Server.Event.Watchdog.WatchdogServerInterrupted=
|CreatedBy=Frank Wuensche
|CreatedDate=16.01.2013
|CreatedVersion=1
|Manual.Header=Manual
|Manual.1=This event is fired after an interrupt request was sent to a WATCHDOG server.
|Manual.2=It's an information only, and fired each time a server was forced to interrupt.
|Manual.3=Please notice that there can run several application servers on one and the same physical machine. Each application server starts a WATCHDOG server internally. You can see the identification of the server as additional text.

# WATCHDOG: WatchdogServerStopped
Notification.Common.Server.Event.Watchdog.WatchdogServerStopped=
|CreatedBy=Frank Wuensche
|CreatedDate=16.01.2013
|CreatedVersion=1
|Manual.Header=Manual
|Manual.1=This event is fired after the WATCHDOG server was started successfully.
|Manual.2=It's an information only, and fired each time a server stopped.
|Manual.3=Please notice that there can run several application servers on one and the same physical machine. Each application server starts a WATCHDOG server internally. You can see the identification of the server as additional text.

# WATCHDOG: DistributionListNotification
Notification.Common.Server.Event.Watchdog.DistributionListNotification=
|CreatedBy=Frank Wuensche
|CreatedDate=19.01.2013
|CreatedVersion=1
|Manual.Header=Manual
|Manual.1=This event is fired after the Email distribution configuration of the WATCHDOG was read and processed.
|Manual.2=It's an information only, and fired each time a WATCHDOG server starts. You can use this event to print out an overview about all resource identifiers that were currently watched and to which Email addresses the information were sent in detail.  
|Manual.3=Please notice that there can run several application servers on one and the same physical machine. Each application server starts a WATCHDOG server internally. You can see the identification of the server as additional text.

# WATCHDOG: EmailSent
Notification.Common.Server.Event.Watchdog.EmailSent=
|CreatedBy=Frank Wuensche
|CreatedDate=24.01.2013
|CreatedVersion=1
|Manual.Header=Manual
|Manual.1=This event is fired after each concrete Email that was sent to a recipient.
|Manual.2=It's an information only, and fired each time a WATCHDOG server sends an Email.  
|Manual.3=Please notice that this event can't be sent by Email via WATCHDOG, because in this case a recursive cycle would appear.     
|Manual.4=Please notice that there can run several application servers on one and the same physical machine. Each application server starts a WATCHDOG server internally. You can see the identification of the server as additional text.

#
# WATCHDOG Error
#

# WATCHDOG group
Notification.Common.Server.Error.Watchdog=
|Manual.Header=Manual
|Manual.1=WATCHDOG error notifications (Server)

# WATCHDOG: DistributionListParsingError
Notification.Common.Server.Error.Watchdog.DistributionListParsingError=
|CreatedBy=Frank Wuensche
|CreatedDate=09.01.2013
|CreatedVersion=1
|Manual.Header=Manual
|Manual.1=This event is fired if an error occurs during parsing the WATCHDOG mailing list.
|Manual.2=It's a warning, and fired each time the system failed to parse the mailing list.  
|Manual.3=Please ensure that all configuration settings regarding the WATCHDOG mailing list are correct. You can see the problematic parameter in the details of the printed error message on screen or log file.  
|Manual.4=As long as this error isn't fixed some or all WATCHDOG messages can't be sent.  

# WATCHDOG: ErrorOnReadingConfigurationParameter
Notification.Common.Server.Error.Watchdog.ErrorOnReadingConfigurationParameter=
|CreatedBy=Frank Wuensche
|CreatedDate=15.01.2013
|CreatedVersion=1
|Manual.Header=Manual
|Manual.1=This event is fired if an error occurs during reading of configuration settings regarding the WATCHDOG.
|Manual.2=As long as this error isn't fixed some or all WATCHDOG messages can't be sent.  

# WATCHDOG: ErrorOnSendingEmail
Notification.Common.Server.Error.Watchdog.ErrorOnSendingEmail=
|CreatedBy=Frank Wuensche
|CreatedDate=09.01.2013
|CreatedVersion=1
|Manual.Header=Manual
|Manual.1=This error occurs if the WATCHDOG tries to send an Email via a SMTP Email server.
|Manual.2=It's a serious warning, and fired each time an Email is to be sent.  
|Manual.3=Please ensure that all configuration settings regarding the Email connection are correct. Please check connection data: SMTP host, SMTP port, account name and account password.
|Manual.4=As long as this error isn't fixed some or all Emails can't be sent.

# WATCHDOG: ErrorOnProcessingWatchdog
Notification.Common.Server.Error.Watchdog.ErrorOnProcessingWatchdog=
|CreatedBy=Frank Wuensche
|CreatedDate=09.01.2013
|CreatedVersion=1
|Manual.Header=Manual
|Manual.1=This error is fired if an unexpected error occurs during WATCHDOG processing.
|Manual.2=It's a serious warning, and fired each time the error occurs.  
|Manual.3=You can see additional information in the details of the printed error message on screen or log file. 
|Manual.4=As long as this error isn't fixed some or all WATCHDOG messages can't be processed.

# WATCHDOG: ErrorOnStoppingServer
Notification.Common.Server.Error.Watchdog.ErrorOnStoppingServer=
|CreatedBy=Frank Wuensche
|CreatedDate=16.01.2013
|CreatedVersion=1
|Manual.Header=Manual
|Manual.1=This error is fired if the stopping of the WatCHDOG server thread failed.
|Manual.2=It's a serious warning, and fired after trying to stop the server.  
|Manual.3==Please notice that there can run several application servers on one and the same physical machine. You can see the identification of the server as additional text. 

# WATCHDOG: WatchdogItemLost
Notification.Common.Server.Error.Watchdog.WatchdogItemLost=
|CreatedBy=Frank Wuensche
|CreatedDate=19.01.2013
|CreatedVersion=1
|Manual.Header=Manual
|Manual.1=This error is fired if a WATCHDOG item couldn't be notified because of an error during processing.
|Manual.2=It's a warning, and fired for each lost WATCHDOG item.  
|Manual.3=Please notice that there can run several application servers on one and the same physical machine. You can see the identification of the server as additional text. 

# WATCHDOG: MaximumNumberOfCommandsExceeded
Notification.Common.Server.Error.Watchdog.MaximumNumberOfCommandsExceeded=
|CreatedBy=Frank Wuensche
|CreatedDate=09.01.2013
|CreatedVersion=1
|Manual.Header=Manual
|Manual.1=This error is fired after the maximum number of allowed WATCHDOG commands in the queue of WATCHDOG commands was exceeded.
|Manual.2=It's a warning only, and fired each time this event occurs.
|Manual.3=If the WATCHDOG cannot distribute the messages, or it doesn't work effectively, or there are too many messages to notify in time - the queue may overflow. In this case the input of new WATCHDOG commands is refused until the queue is decreased.
|Manual.4=You can set the maximum number of allowed WATCHDOG commands as a configuration parameter named "MaximumNuOfItemsInCommandQueue". The minimum value of this parameter is determined to 100. If you fall below this value the number is set to 100 automatically.
|Manual.5=Please notice that there can run several application servers on one and the same physical machine. You can see the identification of the server as additional text.

#
# WATCHDOG Context
#

# WATCHDOG group
Context.Common.Server.Identifier.Watchdog=
|Manual.Header=Manual
|Manual.1=WATCHDOG contexts

# Processing: WATCHDOG
Context.Common.Server.Identifier.Watchdog.Processing=Watchdog
|CreatedBy=Frank Wuensche
|CreatedDate=16.01.2013
|CreatedVersion=1
|Manual.Header=Manual
|Manual.1=Context for WATCHDOG processing.

###############################################################################################
#
# Email
#
###############################################################################################

# Email Configuration

#
# EMAIL group
#
Configuration.Common.Server.Property.Email=
|Manual.Header=Manual
|Manual.1=EMAIL properties (Server)

# EMAIL: Active
Configuration.Common.Server.Property.Email.Active=
|CreatedBy=Frank Wuensche
|CreatedDate=01.01.2013
|CreatedVersion=1
|Manual.Header=Manual
|Manual.1=Define if the EMAIL function is switched 'on' or 'off'.
|Manual.2=Please set this value to 'true' if you want to activate the EMAIL function, or to 'false' if you want to deactivate it.

# EMAIL: SmtpHost
Configuration.Common.Server.Property.Email.SmtpHost=
|CreatedBy=Frank Wuensche
|CreatedDate=01.01.2013
|CreatedVersion=1
|Manual.Header=Manual
|Manual.1=Set the SMTP host name of the connection to an EMAIL server.

# EMAIL: SmtpPort
Configuration.Common.Server.Property.Email.SmtpPort=
|CreatedBy=Frank Wuensche
|CreatedDate=01.01.2013
|CreatedVersion=1
|Manual.Header=Manual
|Manual.1=Set the SMTP port number of the connection to an EMAIL server.

# EMAIL: Account
Configuration.Common.Server.Property.Email.Account=
|CreatedBy=Frank Wuensche
|CreatedDate=01.01.2013
|CreatedVersion=1
|Manual.Header=Manual
|Manual.1=Set the account name to connect to the EMAIL server.

# EMAIL: Password
Configuration.Common.Server.Property.Email.Password=
|CreatedBy=Frank Wuensche
|CreatedDate=01.01.2013
|CreatedVersion=1
|Manual.Header=Manual
|Manual.1=Set the password to connect to the EMAIL server.

# EMAIL: ReturnAddress
Configuration.Common.Server.Property.Email.ReturnAddress=
|CreatedBy=Frank Wuensche
|CreatedDate=01.01.2013
|CreatedVersion=1
|Manual.Header=Manual
|Manual.1=Set the return address of the EMAILs sent, e. g. 'admin@system.com'.

# EMAIL: CC
Configuration.Common.Server.Property.Email.CC=
|CreatedBy=Frank Wuensche
|CreatedDate=01.01.2013
|CreatedVersion=1
|Manual.Header=Manual
|Manual.1=Set a CC address used for all EMAILs sent, e. g. 'support@system.com'.
|Manual.2=If you don't want to use a CC address you can set it to an empty string.

# EMAIL: BCC
Configuration.Common.Server.Property.Email.BCC=
|CreatedBy=Frank Wuensche
|CreatedDate=01.01.2013
|CreatedVersion=1
|Manual.Header=Manual
|Manual.1=Set a BCC address used for all EMAILs sent, e. g. 'support@system.com'.
|Manual.2=If you don't want to use a BCC address you can set it to an empty string.

# Email Notification (errors)

#
# Email group
#
Notification.Common.Server.Error.Email=
|Manual.Header=Manual
|Manual.1=Errors regarding the Email distribution

# Email: ErrorOnConnectionToSmtpServer
Notification.Common.Server.Error.Email.ErrorOnConnectionToSmtpServer=
|CreatedBy=Frank Wuensche
|CreatedDate=08.01.2013
|CreatedVersion=1
|Manual.Header=Manual
|Manual.1=This error occurs if the system tries to connect to a SMTP Email server.
|Manual.2=It's a serious warning, and fired each time an Email is to be sent.  
|Manual.3=Please ensure that all configuration settings regarding the Email connection are correct. Please check connection data: SMTP host, SMTP port, account name and account password.
|Manual.4=As long as this error isn't fixed no Email can be sent.

# Email: EmailParameterMissing
Notification.Common.Server.Error.Email.EmailParameterMissing=
|CreatedBy=Frank Wuensche
|CreatedDate=08.01.2013
|CreatedVersion=1
|Manual.Header=Manual
|Manual.1=One or more data to send an Email are missing.
|Manual.2=It's a warning, and fired each time the system failed to send an Email because of missing parameters.  
|Manual.3=Please ensure that all configuration settings regarding the Email connection are correct. You can see the missing parameter in the details of the printed error message on screen or log file.  
|Manual.4=As long as this error isn't fixed no Email can be sent.

###############################################################################################
#
# Application
#
###############################################################################################

# Application Configuration

#
# Application ALL group
#
Configuration.Common.All.Property.Application=
|Manual.Header=Manual
|Manual.1=APPLICATION properties (Server and Client)

# Application: PublicKey
Configuration.Common.All.Property.Application.PublicKey=
|CreatedBy=Frank Wuensche
|CreatedDate=01.01.2013
|CreatedVersion=1
|Manual.Header=Manual
|Manual.1=Set the public key of this application as BASE64 string to tell the opposite part (client or server) how to encrypt a command.

# Application: PrivateKey
Configuration.Common.All.Property.Application.PrivateKey=
|CreatedBy=Frank Wuensche
|CreatedDate=01.01.2013
|CreatedVersion=1
|Manual.Header=Manual
|Manual.1=Set the private key as BASE64 string to decrypt encrypted commands.
|Manual.2=The private key has to correspond to the public key you set.

# Application: SupportedLanguages
Configuration.Common.All.Property.Application.SupportedLanguages=
|CreatedBy=Frank Wuensche
|CreatedDate=07.02.2013
|CreatedVersion=1
|Manual.Header=Manual
|Manual.1=Set the supported languages of the application as a comma separated list. The languages are listed in ISO 639-2 notation, e. g. "deu" (German), "eng" (english) or "fra" (french).
|Manual.2=For example: "SupportedLanguages=deu, eng, fra"
|Manual.3=After starting an application the system searches for all translated files and reads the values into its central memory.
|Manual.4=The setting is mandatory. Please set at least one language.

# Application: MainLanguage
Configuration.Common.All.Property.Application.MainLanguage=
|CreatedBy=Frank Wuensche
|CreatedDate=07.02.2013
|CreatedVersion=1
|Manual.Header=Manual
|Manual.1=Set the main language of the application. The languages are listed in ISO 639-2 notation, e. g. "deu" (German), "eng" (english) or "fra" (french).
|Manual.2=The language has to be a member of the supported languages (see configuration item: SupportedLanguages)."
|Manual.3=The setting is mandatory.

# Application: SecondaryLanguage
Configuration.Common.All.Property.Application.SecondaryLanguage=
|CreatedBy=Frank Wuensche
|CreatedDate=07.02.2013
|CreatedVersion=1
|Manual.Header=Manual
|Manual.1=Set the secondary language of the application. The languages are listed in ISO 639-2 notation, e. g. "deu" (German), "eng" (english) or "fra" (french).
|Manual.2=The language has to be a member of the supported languages (see configuration item: SupportedLanguages)."
|Manual.3=The setting is optional.

#
# Application CLIENT group
#
Configuration.Common.Client.Property.Application=
|Manual.Header=Manual
|Manual.1=APPLICATION properties (Client)

# APPLICATION: ServerList
Configuration.Common.Client.Property.Application.ServerList=
|CreatedBy=Frank Wuensche
|CreatedDate=01.01.2013
|CreatedVersion=1
|Manual.Header=Manual
|Manual.1=Define a list of application servers a client can be connected to.
|Manual.2=Each item contains the IP address or domain address of the server plus the port number to connect with, separated by colon ':', e. g. '125.8.99.12:8081' or 'server.com:8080'.
|Manual.3=Please separate the items with comma, e. g. '125.8.99.12:8081, server.com:8080'.
|Usage.Header=Using a parameter file
|Usage.1=Instead of using a comma separated list you may store all parameters in a parameter file, without any limitation regarding the format.
|Usage.2=At the end of the day the lines of the parameter file were joined to a single string. You might comment some lines with the help of the hash mark "#". Those lines are ignored.
|Usage.3=You can name the configuration file practically, e. g. 'something.conf', and refer to it with the name in curly bracket, starting with a dollar symbol, e. g. '${something.conf}'.

# Application Notification (Error)

#
# Application ALL group
#
Notification.Common.All.Error.Application=
|Manual.Header=Manual
|Manual.1=Application error messages (all)

# Application: PublicKeyOnClientNotSet
Notification.Common.All.Error.Application.PublicKeyOnClientNotSet=
|CreatedBy=Frank Wuensche
|CreatedDate=09.01.2013
|CreatedVersion=1
|Manual.Header=Manual
|Manual.1=This event is fired during a handshake if the public key of the client is not defined.
|Manual.2=If there is no public key set on client the processing of commands between server and client is refused. The public key is mandatory.

# Application: PublicKeyOnServerNotSet
Notification.Common.All.Error.Application.PublicKeyOnServerNotSet=
|CreatedBy=Frank Wuensche
|CreatedDate=09.01.2013
|CreatedVersion=1
|Manual.Header=Manual
|Manual.1=This event is fired during a handshake if the public key of the server is not defined.
|Manual.2=If there is no public key set on server the processing of commands between server and client is refused. The public key is mandatory.

# Application: ForcedShutdownDueToErrorOnInitialization
Notification.Common.All.Error.Application.ForcedShutdownDueToErrorOnInitialization=
|CreatedBy=Frank Wuensche
|CreatedDate=18.01.2013
|CreatedVersion=1
|Manual.Header=Manual
|Manual.1=This error occurs if an application was started but one or more important resources couldn't be bound.
|Manual.2=It's an absolutely severe error, because of the application stopped unscheduled and doesn't run no longer.  
|Manual.3=Please notice that there can run several application servers on one and the same physical machine. You can see the identification of the server as additional text.

# Application: ErrorOnInitializing
Notification.Common.All.Error.Application.ErrorOnInitializing=
|CreatedBy=Frank Wuensche
|CreatedDate=31.01.2013
|CreatedVersion=1
|Manual.Header=Manual
|Manual.1=This error occurs if one or more errors occurred during initializing phase of the application.
|Manual.2=It's a severe error. The application shuts down and does not work until the error is fixed.
|Manual.3=Please notice that there can run several applications on one and the same physical machine. You can see the identification of the application as additional text.

# Application CLIENT notification (Error)

#
# Application CLIENT group
#
Notification.Common.Client.Error.Application=
|Manual.Header=Manual
|Manual.1=Application error messages (clients)

# Application: SocketTimeout
Notification.Common.Client.Error.Application.SocketTimeout=
|CreatedBy=Frank Wuensche
|CreatedDate=09.01.2013
|CreatedVersion=1
|Manual.Header=Manual
|Manual.1=This error is fired after a timeout of a socket connection.
|Manual.2=It's a warning only, and fired each time a client loses the connection to a socket because of a timeout.

# Application: ErrorOnProcessingRequestToServer
Notification.Common.Client.Error.Application.ErrorOnProcessingRequestToServer=
|CreatedBy=Frank Wuensche
|CreatedDate=09.01.2013
|CreatedVersion=1
|Manual.Header=Manual
|Manual.1=This error is fired after an error occurred during processing a request from the client to the server.
|Manual.2=It's an error, and fired each time a request failed.

# Application: ErrorOnPreparingCommandOnClient
Notification.Common.Client.Error.Application.ErrorOnPreparingCommandOnClient=
|CreatedBy=Frank Wuensche
|CreatedDate=09.01.2013
|CreatedVersion=1
|Manual.Header=Manual
|Manual.1=This error occurs if the client failed to prepare a command request.
|Manual.2=It's an error, and fired each time a preparing of a request failed. The request was not send to the server, because of the error.

# Application: ErrorOnEvaluatingCommandOnClient
Notification.Common.Client.Error.Application.ErrorOnEvaluatingCommandOnClient=
|CreatedBy=Frank Wuensche
|CreatedDate=09.01.2013
|CreatedVersion=1
|Manual.Header=Manual
|Manual.1=The client request was sent to the server, processed on the server, and responded by the server. But there was an error on evaluating the responded data by the client.
|Manual.2=It's an error, and fired each time a evaluating of a server response failed.

#
# Application SERVER group
#
Notification.Common.Server.Error.Application=
|Manual.Header=Manual
|Manual.1=Application error notifications (server)

# Application: ErrorOnAcceptingClientSocket
Notification.Common.Server.Error.Application.ErrorOnAcceptingClientSocket=
|CreatedBy=Frank Wuensche
|CreatedDate=09.01.2013
|CreatedVersion=1
|Manual.Header=Manual
|Manual.1=This error is fired after an error occurred during processing a socket request from a client.
|Manual.2=Please notice that there can run several application servers on one and the same physical machine. You can see the identification of the server as additional text.

# Application: ErrorOnServerSocket
Notification.Common.Server.Error.Application.ErrorOnServerSocket=
|CreatedBy=Frank Wuensche
|CreatedDate=09.01.2013
|CreatedVersion=1
|Manual.Header=Manual
|Manual.1=This error occurs if the server was not able to open or close a server socket.
|Manual.2=Please notice that there can run several application servers on one and the same physical machine. You can see the identification of the server as additional text.

# Application: ErrorOnStartingServer
Notification.Common.Server.Error.Application.ErrorOnStartingServer=
|CreatedBy=Frank Wuensche
|CreatedDate=09.01.2013
|CreatedVersion=1
|Manual.Header=Manual
|Manual.1=This error occurs if the server main thread couldn't be started.
|Manual.2=Please notice that there can run several application servers on one and the same physical machine. You can see the identification of the server as additional text.

# Application: ErrorOnShutdownThreadPool
Notification.Common.Server.Error.Application.ErrorOnShutdownThreadPool=
|CreatedBy=Frank Wuensche
|CreatedDate=09.01.2013
|CreatedVersion=1
|Manual.Header=Manual
|Manual.1=This error occurs if shut down of the thread pool of the server failed.
|Manual.2=Please notice that there can run several application servers on one and the same physical machine. You can see the identification of the server as additional text.

# Application: ErrorOnStoppingServer
Notification.Common.Server.Error.Application.ErrorOnStoppingServer=
|CreatedBy=Frank Wuensche
|CreatedDate=09.01.2013
|CreatedVersion=1
|Manual.Header=Manual
|Manual.1=This error is fired if the stopping of the server main thread failed.
|Manual.2=Please notice that there can run several application servers on one and the same physical machine. You can see the identification of the server as additional text.

# Application: ErrorOnInvokingCommand
Notification.Common.Server.Error.Application.ErrorOnInvokingCommand=
|CreatedBy=Frank Wuensche
|CreatedDate=09.01.2013
|CreatedVersion=1
|Manual.Header=Manual
|Manual.1=This error is fired if the invoking of a command class on  the server failed.
|Manual.2=Please notice that there can run several application servers on one and the same physical machine. You can see the identification of the server as additional text.

# Application: ErrorOnCleaningSessionList
Notification.Common.Server.Error.Application.ErrorOnCleaningSessionList=
|CreatedBy=Frank Wuensche
|CreatedDate=09.01.2013
|CreatedVersion=1
|Manual.Header=Manual
|Manual.1=This error is fired if the cleaning of session list on the server failed.
|Manual.2=Please notice that there can run several application servers on one and the same physical machine. You can see the identification of the server as additional text.

# Application: ClientSessionAlreadyExistsOnServer
Notification.Common.Server.Error.Application.ClientSessionAlreadyExistsOnServer=
|CreatedBy=Frank Wuensche
|CreatedDate=09.01.2013
|CreatedVersion=1
|Manual.Header=Manual
|Manual.1=This error occurs if the client requests a new session to be created on the server, but the session identifier already exists.
|Manual.2=It's a warning only. May be another client created the same session identifier by chance, or the client requested a new server session though it did it before with the same session identifier. The client should generate a new session identifier and try again to create a new session on server.
|Manual.3=Please notice that there can run several application servers on one and the same physical machine. You can see the identification of the server as additional text.

# Application: ClientSessionDoesNotExistOnServer
Notification.Common.Server.Error.Application.ClientSessionDoesNotExistOnServer=
|CreatedBy=Frank Wuensche
|CreatedDate=09.01.2013
|CreatedVersion=1
|Manual.Header=Manual
|Manual.1=This error occurs if the client processes a command on server, but no session identifier for the client could be found.
|Manual.2=It's a warning only. May be the server was started meanwhile, or the client forgot to request a server session. The client should generate a new session identifier and try to create a new session on server. Please use the command "CreateSession" to do so.
|Manual.3=Please notice that there can run several application servers on one and the same physical machine. You can see the identification of the server as additional text.

# Application: WrongClientApplication
Notification.Common.Server.Error.Application.WrongClientApplication=
|CreatedBy=Frank Wuensche
|CreatedDate=09.01.2013
|CreatedVersion=1
|Manual.Header=Manual
|Manual.1=This error occurs if the client requests a command to a server that supports another application than the client needs.
|Manual.2=It's a warning only. A server with another application addressed by a client doesn't need to be a real error. If a client can't access to a server it tries to find a new server from his server list.
|Manual.3=Please notice that there can run several application servers on one and the same physical machine. You can see the identification of the server as additional text.

# Application: WrongClientVersion
Notification.Common.Server.Error.Application.WrongClientVersion=
|CreatedBy=Frank Wuensche
|CreatedDate=09.01.2013
|CreatedVersion=1
|Manual.Header=Manual
|Manual.1=This error occurs if the client requests a command to a server that supports another version than the client needs.
|Manual.2=It's a warning only. A server with another server addressed by a client doesn't need to be a real error. If a client can't access to a server it tries to find a new server from his server list.
|Manual.3=Please notice that there can run several application servers on one and the same physical machine. You can see the identification of the server as additional text.

# Application: ErrorOnValidatingClientCommandOnServer
Notification.Common.Server.Error.Application.ErrorOnValidatingClientCommandOnServer=
|CreatedBy=Frank Wuensche
|CreatedDate=09.01.2013
|CreatedVersion=1
|Manual.Header=Manual
|Manual.1=This error occurs if the server failed to validate a command request sent by the client.
|Manual.2=The request was send to the server by the client, and was validated before executing by the server.

# Application: ErrorOnEvaluatingServerResults
Notification.Common.Server.Error.Application.ErrorOnEvaluatingServerResults=
|CreatedBy=Frank Wuensche
|CreatedDate=09.01.2013
|CreatedVersion=1
|Manual.Header=Manual
|Manual.1=The client request was sent to the server and processed on the server. After processing a command the server validates the results before it sent back the result data to the client.
|Manual.2=The error is fired each time a validating failed.

# Application: ErrorOnProcessingRequestFromClient
Notification.Common.Server.Error.Application.ErrorOnProcessingRequestFromClient=
|CreatedBy=Frank Wuensche
|CreatedDate=09.01.2013
|CreatedVersion=1
|Manual.Header=Manual
|Manual.1=The client request was sent to the server and the server tried to process the request. During processing a command on the server an error occurred.
|Manual.2=The error is fired each time a command processing on server failed.

# Application Notification (Event)

#
# Application CLIENT group
#
Notification.Common.Client.Event.Application=
|Manual.Header=Manual
|Manual.1=Application event notifications (client)

# Application: ClientStarted
Notification.Common.Client.Event.Application.ClientStarted=
|CreatedBy=Frank Wuensche
|CreatedDate=18.01.2013
|CreatedVersion=1
|Manual.Header=Manual
|Manual.1=This event is fired after a client application was started.
|Manual.2=It's an information only, and fired each time a client application starts.
|Manual.3=Please notice that there can run several client applications on one and the same physical machine. You can see the identification of the application as additional text.

# Application: ClientStopped
Notification.Common.Client.Event.Application.ClientStopped=
|CreatedBy=Frank Wuensche
|CreatedDate=18.01.2013
|CreatedVersion=1
|Manual.Header=Manual
|Manual.1=This event is fired after the client application stopped.
|Manual.2=It's an information only, and fired each time a client application ends.
|Manual.3=Please notice that there can run several client applications on one and the same physical machine. You can see the identification of the application as additional text.

#
# Application SERVER group
#
Notification.Common.Server.Event.Application=
|Manual.Header=Manual
|Manual.1=Application event notifications (server)

# Application: ApplicationServerStarted
Notification.Common.Server.Event.Application.ApplicationServerStarted=
|CreatedBy=Frank Wuensche
|CreatedDate=04.01.2013
|CreatedVersion=1
|Manual.Header=Manual
|Manual.1=This event is fired after an application server was started.
|Manual.2=It's an information only, and fired each time an application server starts.
|Manual.3=Please notice that there can run several application servers on one and the same physical machine. You can see the identification of the server as additional text.

# Application: ApplicationServerInterrupted
Notification.Common.Server.Event.Application.ApplicationServerInterrupted=
|CreatedBy=Frank Wuensche
|CreatedDate=04.01.2013
|CreatedVersion=1
|Manual.Header=Manual
|Manual.1=This event is fired after an interrupt request was sent to an application server.
|Manual.2=It's an information only, and fired each time a server was forced to interrupt.
|Manual.3=Please notice that there can run several application servers on one and the same physical machine. You can see the identification of the server as additional text.

# Application: ApplicationServerStopped
Notification.Common.Server.Event.Application.ApplicationServerStopped=
|CreatedBy=Frank Wuensche
|CreatedDate=04.01.2013
|CreatedVersion=1
|Manual.Header=Manual
|Manual.1=This event is fired after the application server stopped.
|Manual.2=It's an information only, and fired each time an application server ends.
|Manual.3=Please notice that there can run several application servers on one and the same physical machine. You can see the identification of the server as additional text.

# Application: MaximumNumberOfSessionsExceeded
Notification.Common.Server.Event.Application.MaximumNumberOfSessionsExceeded=
|CreatedBy=Frank Wuensche
|CreatedDate=04.01.2013
|CreatedVersion=1
|Manual.Header=Manual
|Manual.1=This event is fired after the maximum of allowed sessions on an application server was exceeded.
|Manual.2=It's an information only, and fired each time this event occurs.
|Manual.3=Sessions were cleaned automatically by the application server if the maximum number of allowed sessions was exceeded. You can set a range from 10 to 90 percent of sessions that are to delete in the server configuration file. You also can define the maximum number of sessions in the same configuration file.
|Manual.4=Please notice that there can run several application servers on one and the same physical machine. You can see the identification of the server as additional text.

# Application: SessionCleaned
Notification.Common.Server.Event.Application.SessionCleaned=
|CreatedBy=Frank Wuensche
|CreatedDate=04.01.2013
|CreatedVersion=1
|Manual.Header=Manual
|Manual.1=This event is fired after an application server has cleaned sessions.
|Manual.2=It's an information only, and fired each time after an application server cleaned sessions.
|Manual.3=Sessions were cleaned automatically by the application server if the maximum number of allowed sessions was exceeded. You can set a range from 10 to 90 percent of sessions that are to delete in the server configuration file. You also can define the maximum number of sessions in the same configuration file.
|Manual.4=Please notice that there can run several application servers on one and the same physical machine. You can see the identification of the server as additional text.

###############################################################################################
#
# Session
#
###############################################################################################

# Session Configuration

#
# Session group
#
Configuration.Common.Server.Property.Session=
|Manual.Header=Manual
|Manual.1=Session properties (Server)

# Session: MaxNuOfActiveSessions
Configuration.Common.Server.Property.Session.MaxNuOfActiveSessions=
|CreatedBy=Frank Wuensche
|CreatedDate=01.01.2013
|CreatedVersion=1
|Manual.Header=Manual
|Manual.1=Set the maximum number of active sessions that are allowed.
|Manual.2=If the number of allowed active sessions is exceeded, the system deletes older sessions automatically.

# Session: PercentageRateForCleaning
Configuration.Common.Server.Property.Session.PercentageRateForCleaning=
|CreatedBy=Frank Wuensche
|CreatedDate=01.01.2013
|CreatedVersion=1
|Manual.Header=Manual
|Manual.1=Set the percentage rate for cleaning sessions. Please use rates from 10 percent to 90 percent, as an integer value without any additional characters, e. g. '10' for 10%.
|Manual.2=If the number of allowed active sessions is exceeded, the system deletes this rate of all active sessions, e. g. 10%.

###############################################################################################
#
# LOCAL DATA
#
###############################################################################################

#
# LastValidServerConnection group
#
LocalData.Common.Client.Property.LastValidServerConnection=
|Manual.Header=Manual
|Manual.1=Describes the parameters of the last valid connection to an application server the client was connected to.

# LastValidServerConnection: Host
LocalData.Common.Client.Property.LastValidServerConnection.Host=
|CreatedBy=Frank Wuensche
|CreatedDate=02.01.2013
|CreatedVersion=1
|Manual.Header=Manual
|Manual.1=Host name or IP address of the application server the client was connected to lastly.

# LastValidServerConnection: Port
LocalData.Common.Client.Property.LastValidServerConnection.Port=
|CreatedBy=Frank Wuensche
|CreatedDate=02.01.2013
|CreatedVersion=1
|Manual.Header=Manual
|Manual.1=Port number of the application server socket the client was connected to lastly.

# LastValidServerConnection: ClientSessionIdentifier
LocalData.Common.Client.Property.LastValidServerConnection.ClientSessionIdentifier=
|CreatedBy=Frank Wuensche
|CreatedDate=02.01.2013
|CreatedVersion=1
|Manual.Header=Manual
|Manual.1=Client session identifier that was used on last connection.

# LastValidServerConnection: ServerPublicKey
LocalData.Common.Client.Property.LastValidServerConnection.ServerPublicKey=
|CreatedBy=Frank Wuensche
|CreatedDate=02.01.2013
|CreatedVersion=1
|Manual.Header=Manual
|Manual.1=Public key of the application server the client was connected to lastly.

###############################################################################################
#
# Encoding
#
###############################################################################################

#
# Encoding group
#
Notification.Common.All.Error.Encoding=
|Manual.Header=Manual
|Manual.1=Errors regarding the encoding of command containers

# Encoding: ErrorOnEncodingCommandContainer
Notification.Common.All.Error.Encoding.ErrorOnEncodingCommandContainer=
|CreatedBy=Frank Wuensche
|CreatedDate=08.01.2013
|CreatedVersion=1
|Manual.Header=Manual
|Manual.1=This error occurs if the system fails to encode or decode a command container.
|Manual.2=It's a serious warning, and fired each time the request of a client to a server or vice versa failed because of encoding problems.  
|Manual.3=You have to look at the technical details of the dump to decide about the cause.

###############################################################################################
#
# Context
#
###############################################################################################

# Context Configuration

#
# Context group
#
Configuration.Common.All.Property.Context=
|Manual.Header=Manual
|Manual.1=Context properties (All)

# Session: MaxNuOfActiveSessions
Configuration.Common.All.Property.Context.MaxNuOfDumpItems=
|CreatedBy=Frank Wuensche
|CreatedDate=22.01.2013
|CreatedVersion=1
|Manual.Header=Manual
|Manual.1=Set the maximum number of items that are allowed in a dump list.
|Manual.2=This parameter is used to avoid an overflow of messages accumulated in a dump list. Typically a dump context should have a relative small life span, because it is dedicated to a specific functionality. But if a dump context accidentally would live very long, say the whole runtime of a server, say many days or weeks, and no error message would occur, the dump list will be growing without flushing.
|Manual.3=If the number of allowed items is exceeded, the whole dump list is cleared automatically. The minimum value accepted is 1000. The maximum value can be set to 5000. The default value is 2000.
|Manual.4=After a dump list was cleared the event "MaxNuOfDumpItemsExceeded" is fired.

# Context Event

#
# Context group
#
Notification.Common.All.Event.Context=
|Manual.Header=Manual
|Manual.1=Context event notifications (All)

# Context: MaxNuOfDumpItemsExceeded
Notification.Common.All.Event.Context.MaxNuOfDumpItemsExceeded=
|CreatedBy=Frank Wuensche
|CreatedDate=22.01.2013
|CreatedVersion=1
|Manual.Header=Manual
|Manual.1=This event is fired after the maximum number of allowed items in a dump list was exceeded, and the accumulated dump list of the affected context was cleared automatically. 
|Manual.2=It's an information only, and fired each time this event occurs.
|Manual.3=Please use the configuration parameter "MaxNuOfDumpItems" to set resp. modify the maximum number of allowed items in a dump list.

# Context Context

#
# All group
#
Context.Common.All.Identifier.Overall=
|Manual.Header=Manual
|Manual.1=Overall context

# Overall: Initialization
Context.Common.All.Identifier.Overall.Initialization=Initialization
|CreatedBy=Frank Wuensche
|CreatedDate=13.01.2013
|CreatedVersion=1
|Manual.Header=Manual
|Manual.1=Context for an initialization process of server or client.

# Overall: Tracking
Context.Common.All.Identifier.Overall.Tracking=Tracking
|CreatedBy=Frank Wuensche
|CreatedDate=13.01.2013
|CreatedVersion=1
|Manual.Header=Manual
|Manual.1=Default tracking context for server or client application.

#
# Server group
#
Context.Common.Server.Identifier.Processing=
|Manual.Header=Manual
|Manual.1=Server processing context

# Processing: ProcessingClientCommand
Context.Common.Server.Identifier.Processing.ProcessingClientCommand=CommandProcessing
|CreatedBy=Frank Wuensche
|CreatedDate=13.01.2013
|CreatedVersion=1
|Manual.Header=Manual
|Manual.1=Context for processing a client command on server side.

#
# Client group
#
Context.Common.Client.Identifier.Processing=
|Manual.Header=Manual
|Manual.1=Client processing context

# Processing: ProcessingClientCommand
Context.Common.Client.Identifier.Processing.ClientRequestToServer=ClientRequest
|CreatedBy=Frank Wuensche
|CreatedDate=13.01.2013
|CreatedVersion=1
|Manual.Header=Manual
|Manual.1=Context for requesting a command from a client to a server on client side.
|Manual.2=The context is created before the client sends its request to the server.

###############################################################################################
#
# Command
#
###############################################################################################

#
# All group
#
Command.Common.All.Identifier.Processing=
|Manual.Header=Manual
|Manual.1=Overall context

# Processing: Handshake
Command.Common.All.Identifier.Processing.Handshake=ServerCommandHandshake
|CreatedBy=Frank Wuensche
|CreatedDate=14.01.2013
|CreatedVersion=1
|Manual.Header=Manual
|Manual.1=Command for handshake between client and server.
|Manual.2=The client sends this command to get first contact to a server. The client gives some information, like its application identifier, its version, its public key and its session identifier. The server checks if it can meet all demands and responses successfully or refuses connection.
|Manual.3=The session identifier of the client must be known on server side. Otherwise the server refuses the connection. In this case the client has to create a session on server side by executing the command "CreateSession" first.
|Manual.4=Please notice: The alias name of this command must be the name of the class that processes this command on the server. For example: If the alias name is set to "ServerCommandHandshake" the system tries to load  a class named "ServerCommandHandshake" with the help of the class loader on server side.

# Processing: CreateSession
Command.Common.All.Identifier.Processing.CreateSession=ServerCommandCreateSession
|CreatedBy=Frank Wuensche
|CreatedDate=14.01.2013
|CreatedVersion=1
|Manual.Header=Manual
|Manual.1=Command for creating a client session on server side.
|Manual.2=The client sends this command to create an active session on server side. Additional the client gives some information, like its application identifier, its version and its public key. The server checks if it can meet all demands and responses successfully or denies connection.
|Manual.3=The session identifier of the client must be known on server side. Otherwise the server refuses the connection. For that reason the client has to create a session on server side first, before other commands can be executed.
|Manual.4=Please notice: The alias name of this command must be the name of the class that processes this command on the server. For example: If the alias name is set to "ServerCommandCreateSession" the system tries to load  a class named "ServerCommandCreateSession" with the help of the class loader on server side.

###############################################################################################
#
# Right
#
###############################################################################################

# Right Notification (Event)

#
# Right Server group
#
Notification.Common.Server.Event.Right=
|Manual.Header=Manual
|Manual.1=Events regarding right management

# Right: RightSettingsNotification
Notification.Common.Server.Event.Right.RightSettingsNotification=
|CreatedBy=Frank Wuensche
|CreatedDate=13.03.2013
|CreatedVersion=1
|Manual.Header=Manual
|Manual.1=This event is fired after the user right setting was processed.
|Manual.2=It's an information only, and fired each time an application starts. You can use this event to print out an overview about all rights that are currently assigned in detail.
|Manual.3=The right management deals with two main issues. There can be set "Right Items" relating to domain functions, sub functions or data, applying flexible hierarchies. And, these "Right Items" are assigned to one or more "Right Groups". Each user has to become a member of just one "Right Group" that determines his rights in detail. At runtime the system checks if the logged user actually is allowed to use the specific functionality or data.    
|Manual.4=Please notice that there can run several application servers on one and the same physical machine. You can see the identification of the server as additional text.

# Right Notification (Error)

#
# Right Server group
#
Notification.Common.Server.Error.Right=
|Manual.Header=Manual
|Manual.1=Errors regarding right management

# Application: PublicKeyOnClientNotSet
Notification.Common.Server.Error.Right.ErrorOnAssigningRights=
|CreatedBy=Frank Wuensche
|CreatedDate=10.03.2013
|CreatedVersion=1
|Manual.Header=Manual
|Manual.1=This error occurs if there was a problem on assigning right items to right groups during the start of an application.
|Manual.2=It's a severe error, because some user rights might be unclear or not be set appropriate. You can see additional information in the details of the printed error message on screen or log file. 
|Manual.3=Please notice that there can run several application servers on one and the same physical machine. You can see the identification of the server as additional text.

###############################################################################################
#
# License
#
###############################################################################################

# License Notification (Event)

# License group
Notification.Common.Server.Event.License=
|Manual.Header=Manual
|Manual.1=Events regarding license

# Label: ErrorOnWritingLabelTemplateFile
Notification.Common.Server.Event.License.ErrorOnWritingLicenseTemplateFile=
|CreatedBy=Frank Wuensche
|CreatedDate=12.03.2013
|CreatedVersion=1
|Manual.Header=Manual
|Manual.1=This event is fired after the system has failed to write a license template file to the license directory.
|Manual.2=On each system start the system writes license template files with the actual settings to assist the support and sales department.
|Manual.3=It's a warning only, and fired once after starting the system.

# License Notification (Error)

#
# License Server group
#
Notification.Common.Server.Error.License=
|Manual.Header=Manual
|Manual.1=Errors regarding license management

# Application: PublicKeyOnClientNotSet
Notification.Common.Server.Error.License.ErrorOnAssigningLicense=
|CreatedBy=Frank Wuensche
|CreatedDate=11.03.2013
|CreatedVersion=1
|Manual.Header=Manual
|Manual.1=This error occurs if there was a problem on assigning license items to license models during the start of an application.
|Manual.2=It's a severe error, because some user license might be unclear or not be set appropriate. You can see additional information in the details of the printed error message on screen or log file. 
|Manual.3=Please notice that there can run several application servers on one and the same physical machine. You can see the identification of the server as additional text.

